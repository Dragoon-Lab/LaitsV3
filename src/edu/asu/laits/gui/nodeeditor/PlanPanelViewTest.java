/*
 * LAITS Project
 * Arizona State University
 */
package edu.asu.laits.gui.nodeeditor;

import edu.asu.laits.editor.ApplicationContext;
import edu.asu.laits.model.TaskSolution;
import edu.asu.laits.model.Vertex;
import java.awt.Color;
import javax.swing.JPanel;
import org.apache.log4j.Logger;

/**
 * This class implements Author's plan while creating any node
 *
 * @author ramayantiwari
 */
public class PlanPanelViewTest extends JPanel {
    
    private String selectedPlan;
    private static PlanPanelViewTest planView;
    private boolean isViewEnabled = false;
    private NodeEditor nodeEditor;
    /**
     * Logger *
     */
    private static Logger logs = Logger.getLogger("DevLogs");
    private static Logger activityLogs = Logger.getLogger("ActivityLogs");
    
    public PlanPanelViewTest(NodeEditor ne) {
        initComponents();
        nodeEditor = ne;
        initPanel();
    }
    
    public void initPanel() {
        logs.debug("Initializing plan panel for Node ");
        setSelectedPlan(nodeEditor.getCurrentVertex().getPlan());
    }
    
    public void initPanelForNewNode() {
        logs.debug("Initializing plan panel For New Node");
        resetPlanPanel();        
    }
    
    private void resetPlanPanel() {
        isViewEnabled = false;
        buttonGroup1.clearSelection();
        
    }
    
    public boolean processPlanPanel() {
        if (buttonGroup1.getSelection() != null) {
            nodeEditor.getCurrentVertex().setPlan(getSelectedPlan());
        } else {
            nodeEditor.setEditorMessage("Please select a plan for this node.", true);
            return false;
        }
        return true;
    }

    /**
     * Method to set the initialize the selected plan radio button
     */
    private void setSelectedPlan(Vertex.Plan plan) {
        
    }
    
    public Vertex.Plan getSelectedPlan() {
        return null;
    }
    
    public boolean isViewEnabled() {
        if(nodeEditor.getCurrentVertex().getDescriptionStatus().equals(Vertex.DescriptionStatus.CORRECT) ||
                nodeEditor.getCurrentVertex().getDescriptionStatus().equals(Vertex.DescriptionStatus.GAVEUP))
            return true;
        else 
            return false;
    }
    
    
    
    public void setSelectedPlanBackground(Color c) {
        logs.debug("Setting Background of Selected Plan to " + c.toString());
        
        
    }
    
    public void resetBackGroundColor() {
       
    }
    
    public void giveUpPlanPanel() {
        TaskSolution solution = ApplicationContext.getCorrectSolution();
        Vertex.Plan correctPlan = solution.getNodeByName(
                nodeEditor.getCurrentVertex().getName()).getNodePlan();
        
        setSelectedPlan(correctPlan);
        setSelectedPlanBackground(Color.YELLOW);
    }
    
    public String printPlanPanel(){
        StringBuilder sb = new StringBuilder();
        sb.append("Selected Plan : '");
        sb.append(planToString(getSelectedPlan())+"'");
        return sb.toString();        
    }
    
    private String planToString(Vertex.Plan p){
       return null;
    }
    
    public void setEditableRadio(Boolean b){
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jProgressBar1 = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setColumnSelectionAllowed(true);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable2);
        jTable2.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable2.getColumnModel().getColumn(2).setResizable(false);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
